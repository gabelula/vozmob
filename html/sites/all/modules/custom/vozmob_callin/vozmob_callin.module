<?php
/**
 * @file Provides sample scripts that demonstrate the capabilities of the VoIP Drupal platform
 */ 

/**
 * Implementation of hook_voipscript_load_script()
 */
function vozmob_callin_voipscript_load_script($script_name, $params=NULL) {
  return _vozmob_callin_load_script($script_name);
}

/**
 * Implementation of hook_voipscript_get_script_names()
 */
function vozmob_callin_voipscript_get_script_names() {
  return array('vozmob_callin_record_script');
}

/*
 * Sample scripts that highlight VoIP Drupal capabilities
 */
function _vozmob_callin_load_script($script_name) {
  $script = new VoipScript('vozmob_callin_record_script');

  $script->addLabel('language_selection');
  $script->addSetLanguage('es');
  $text = 'Para español, oprima el número uno.';
  $url = '';
  $timeout = 3;
  $end_key = '';
  $num_digits = 1;
  $script->addGetInput($text, $url, $timeout, $end_key, $num_digits);

  $script->addGotoIf('switch_to_spanish', "^%input_digits == '1'");
  $script->addSetLanguage('en');
  $script->addSet('msg', 'Please record your message after the beep.  When done, press the pound key.');
  $script->addGoto('start_recording');

  $script->addLabel('switch_to_spanish');
  $script->addSetLanguage('es');
  $script->addSet('msg', 'Graba tu mensaje despues del tono. Quando estiver listo, oprime el #.');
//TODO: translate the remaining sentences to Spanish using Drupal's locale functionality. the commands "say" and "get input" automatically call t() with the appropriate language;
  $script->addGoto('start_recording');
  
  $script->addLabel('start_recording');
  $script->addSay('%msg');
  $timeout = 5;
  $end_key = '#';
  $max_length = 20;
  $script->addRecord($timeout, $end_key, $max_length);

  $script->addGotoIf('no recording detected', '^%recording_duration == 0');

  $script->addSay(t('You said @message', array('@message' => '%recording_url')));

  $script->addLabel('accept menu');
  $text = 'To accept this recording, press 1. To record it once again, press 2. To hangup, press the pound key.';
  $url = '';
  $timeout = 5;
  $end_key = '';
  $num_digits = 1;
  $script->addGetInput($text, $url, $timeout, $end_key, $num_digits);

  $script->addGotoIf('accept recording', "^%input_digits == '1'");

  $script->addGotoIf('start_recording', "^%input_digits == '2'");

  $script->addGotoIf('end call', "^%input_digits == '#'");

  $script->addSay('Invalid input received. Please try again.');
  $script->addGoto('accept menu');

  $script->addLabel('accept recording');
  // Process recording.
  $script->addSay('About to start processing the recorded file.');
  $script->addSet('callback_result', '^_vozmob_callin_record_callback(%call_id, %recording_url, %recording_duration)');
  $script->addSay('The callback returned: %callback_result');
  $script->addGoto('end call');

  $script->addLabel('no input received');
  $script->addSay("No input received. Please try again.");
  $script->addGoto('start_recording');

  $script->addLabel('no recording detected');
  $script->addSay("No recording detected. Please try again.");
  $script->addGoto('start_recording');

  $script->addLabel('end call');
  $script->addSay('Bye bye.');
  $script->addHangup();
  return $script;
}

/**
 * Callback function associated with the script vozmob_callin_record_script.
 * It is called whenever that script records a new entry from the user.
 */
function _vozmob_callin_record_callback($call_id, $recording_url, $recording_duration) {
  watchdog('vozmob_callin', 'in _vozmob_callin_record_callback(%call_id, %recording_url, %recording_duration)', array('%call_id' => $call_id, '%recording_url' => $recording_url, '%recording_duration' => $recording_duration));
  $language = 'en';
  $uid = sms_user_get_uid(substr($_REQUEST['From'], 1));
  if (!$uid) {
    // Find number stored without a 1-digit country code.
    $uid = sms_user_get_uid(substr($_REQUEST['From'], 2));
  }
  while (!$uid) {
    $user = user_save(NULL, array(
      'name' => variable_get('sms_registration_username', 'Drupal-') . mt_rand(1, db_result(db_query('SELECT MAX(uid) FROM {users}')) * 10),
      'pass' => user_password(8),
      'mail' => $_REQUEST['From'],
      'roles' => ($role = variable_get('sms_registration_role', NULL)) ? array($role => 1) : NULL,
      'status' => 1,
      'language' => $language,
      'sms_user' => array('number' => sms_formatter($_REQUEST['From']), 'status' => SMS_USER_PENDING, 'gateway' => array()),
    ));
    if ($user) {
      $uid = $user->uid;
    }
  }
  // Construct the new node object.
  $node = new stdClass();
  if ($filename = basename($recording_url)) {
    if (pathinfo($filename, PATHINFO_EXTENSION) == 'mp3') {
      if ($result = drupal_http_request($recording_url)) {
        if ($filepath = file_save_data($result->data, $filename)) {
          $file = new stdClass();
          $file->uid = $uid;
          $file->filename = $filename;
          $file->filepath = $filepath;
          $file->filemime = file_get_mimetype($filename);
          $file->filesize = filesize($filepath);
          $file->status = FILE_STATUS_TEMPORARY;
          $file->timestamp = $_SERVER['REQUEST_TIME'];
          drupal_write_record('files', $file);
          $file->list = variable_get('upload_list_default', 1);
          $file->description = $file->filename;
          $node->files[$file->fid] = $file;
          // Force upload module to recognize the file attachment.
          $node->old_vid = 1;
        }
      }
    }
  }
  $node->title = t('Voice message');
  $node->body = '';
  $node->type = 'blog';
  $node->created = $_SERVER['REQUEST_TIME'];
  $node->changed = $node->created;
  $node->status = 1;
  $node->promote = 1;
  $node->sticky = 0;
  $node->format = 1;
  $node->uid = $uid;
  $node->language = $language;
  $node = node_submit($node);
  node_save($node);
  return 'Success';
}
