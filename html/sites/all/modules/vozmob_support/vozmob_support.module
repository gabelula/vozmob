<?php
// $Id$

/**
 * @file
 * VozMob custom support module.
 */

/**
 * Implementation of hook_menu().
 */
function vozmob_support_menu() {
  $items['admin/messaging/settings/method/mms'] = array(
    'title' => 'MMS',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vozmob_support_messaging_mms_settings'),
    'access arguments' => array('administer messaging'),
    'file' => 'vozmob_support.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function vozmob_support_views_api() {
  return array('api' => 2);
}

/**
 * Implementation of hook_form_alter().
 */
function vozmob_support_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {
    case 'messaging_sendto_form':
      $form['sendto']['#description'] = t("Enter a recipient's mobile phone number, email address or user name.");
      $form['sendto']['#weight'] = -20;
      $gateway = sms_default_gateway();
      if (function_exists($gateway['send form'])) {
        $form['gateway']['#tree'] = TRUE;
        $form['gateway']['#weight'] = -10;
        $form['gateway'] = array_merge($gateway['send form']($required), $form['gateway']);
      }
      if (isset($form['gateway']['carrier']['#description'])) {
        $form['gateway']['carrier']['#description'] = t("Select the recipient's wireless carrier if sending to a phone number.");
      }
      break;
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function vozmob_support_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // Move the messaging_sendto form down to the bottom of the node.
  if ($op == 'view' && isset($node->content['messaging_sendto']['#weight'])) {
    $node->content['messaging_sendto']['#weight'] = 40;
  }
}

/**
 * Implementation of hook_mail_alter().
 */
function vozmob_support_mail_alter(&$message) {
  if (!empty($message['from'])) {
    $message['headers']['Return-Path'] = $message['from'];
  }
}

/**
 * Implementation of hook_message_alter().
 */
function vozmob_support_message_alter(&$message, &$info) {
  if (!empty($message->params['node']) && ($from = variable_get('vozmob_support_messaging_mms_from_node', NULL))) {
    $message->params['sms']['from'] = token_replace($from, 'node', $message->params['node']);
  }
}

function vozmob_support_imagecache_default_presets() {
$presets = array();

$presets['feature'] = array (
  'presetname' => 'feature',
  'actions' => 
  array (
    0 => 
    array (
      'weight' => '0',
      'module' => 'imagecache',
      'action' => 'imagecache_scale_and_crop',
      'data' => 
      array (
        'width' => '330',
        'height' => '247',
      ),
    ),
  ),
);

$presets = array();
$presets['features'] = array (
  'presetname' => 'features',
  'actions' => 
  array (
    0 => 
    array (
      'weight' => '0',
      'module' => 'imagecache',
      'action' => 'imagecache_scale_and_crop',
      'data' => 
      array (
        'width' => '96',
        'height' => '72',
      ),
    ),
  ),
);

$presets = array();
$presets['overlay'] = array (
  'presetname' => 'overlay',
  'actions' => 
  array (
    0 => 
    array (
      'weight' => '0',
      'module' => 'imagecache',
      'action' => 'imagecache_scale',
      'data' => 
      array (
        'width' => '',
        'height' => '384',
        'upscale' => 1,
      ),
    ),
  ),
);

  return $presets;
} 
