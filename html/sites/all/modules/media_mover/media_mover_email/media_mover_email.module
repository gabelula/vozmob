<?php
// $Id: media_mover_email.module,v 1.11 2008/02/29 16:41:22 bdragon Exp $

/**
 *
 * This will probably be moved over to run on the mail handler project
 * or one of the new mail apis. Waiting for things to stabalize out before
 * making the shift.
 */

define('MM_EMAIL_ATTACHMENTS_SUBDIRECTORY', 'email_attachements');

/**
 * Implementation of hook_media_mover().
 */
function media_mover_email_media_mover($op, $action_id = null, $configuration = null, &$item = array(), $running_config = null) {
  switch ($op) {
    // give your driver a distinct name
    case 'name' :
      return 'Harvest email content';

    // create edit configuration option set
    // $action is used to ensure namespacing is kept consistent, form
    // elements must be named $form[your_variable_name]
    // $configuration is an array, settings stored on a per config basis
    case 'config' :
      switch ($action_id) {
        case '1':
          return _media_mover_email_admin_harvest_config($action_id, $configuration);
      }
      break;

    // defines the actions that this module does
    // these are numbered for easy identification of what
    // action is being called
    case 'actions' :
      return array(
        'harvest' => array(1 => t('Harvest attachements from an email account.'))
      );

      // defines directories (under master media_mover directory) this module uses
      // array of directories, will be created under the default
      // media_mover directory, set in admin
    case 'directories':
      return array(MM_EMAIL_ATTACHMENTS_SUBDIRECTORY);

    //admin
    case 'admin' :
      return media_mover_email_admin();

    // allows for module to update additional critera
    // add file to db action. called from media_mover's mm_files_db_update
    // by default, medial_mover's files table is used. $file is available
    case 'update':
      break;

    // functions called on harvest op
    // returns an array of $files
    case 'harvest':
      require_once 'media_mover_email_process.inc';
      return _media_mover_email_harvest($action_id, $configuration);
  }
}

/* ************************************************ */
/* Media Mover: Media Mover hook  functions */
/* ************************************************ */

/**
 * administrative form that shows at admin/media_mover/settings
 */
function media_mover_email_admin() {
  $form = array();

  $form['mm_email'] = array(
    '#type' => 'fieldset',
    '#title' => t("Media Mover Email"),
    '#collapsed' => false,
    '#collapsible' => true,
  );

  $form['mm_email']['MEDIA_MOVER_MODULE_DEBUG_EMAIL'] = array(
    '#title' => t('Debugging email address'),
    '#type' => 'textfield',
    '#description' => t('The email address to send debebugging messages to.'),
    '#default_value' => variable_get('MEDIA_MOVER_MODULE_DEBUG_EMAIL', '') ,
  );

  return $form;
}

/**
 * Config config form for media mover
 * creates the options for each configuration instance
 */
function _media_mover_email_admin_harvest_config($action_id, $configuration) {
  $form["mm_email_harvest_conf"] = array(
    '#type' => 'fieldset',
    '#title' => t('Email Harvest Configuration'),
    '#collapsed' => false,
  );

  $form["mm_email_harvest_conf"]["mm_email_account_name"] = array(
    '#type' => 'textfield',
    '#title' => t('Email Account User'),
    '#description' => t('The user login for the account that you wish to harvest from.'),
    '#default_value' => $configuration['mm_email_account_name'],
  );

  $form["mm_email_harvest_conf"]["mm_email_account_password"] = array(
    '#type' => 'textfield',
    '#title' => t('Email Account Password'),
    '#description' => t('The email account password.'),
    '#default_value' => $configuration['mm_email_account_password'],
   );

  $form["mm_email_harvest_conf"]["mm_email_account_server"] = array(
    '#type' => 'textfield',
    '#title' => t('Server address'),
    '#description' => t('e.g. pop3.mail.yahoo.com'),
    '#default_value' => $configuration['mm_email_account_server'],
  );

  $form["mm_email_harvest_conf"]["mm_email_account_port"] = array(
    '#type' => 'textfield',
    '#title' => t('Email Account POP3 port number'),
    '#description' => t('Port number for the POP3 account (usually 110)'),
    '#default_value' => $configuration['mm_email_account_port'],
   );

  $form["mm_email_harvest_conf"]["mm_email_account_port"] = array(
    '#type' => 'textfield',
    '#title' => t('Email Account POP3 port number'),
    '#description' => t('Port number for the POP3 account (usually 110)'),
    '#default_value' => $configuration['mm_email_account_port'],
  );

  $form["mm_email_harvest_conf"]["mm_email_allowed_files"] = array(
    '#type' => 'textfield',
    '#title' => t('Allowed File Types'),
    '#description' => t('A list of allowed file types, separated by space'),
    '#default_value' => $configuration['mm_email_allowed_files'] ? $configuration['mm_email_allowed_files'] : variable_get('upload_extensions_default', 'mov mp4 mp3 avi 3gp 3g2 divx xvid wmv asf mpg mpeg mpeg4 jpeg'),
  );

  //mm_email_delete_emails
  $form["mm_email_harvest_conf"]["mm_email_delete_emails"] = array(
    '#type' => 'checkbox',
    '#title' => t('Delete emails'),
    '#description' => t('Delete the emails on server after harvest'),
    '#default_value' => $configuration['mm_email_delete_emails'],
  );

  //depends on return address
  $form["mm_email_harvest_conf"]['email_confirmation'] =  array(
    '#type' => 'fieldset',
    '#title' => t("Email Confirmation Settings"),
    '#collapsed' => true,
    '#collapsible' => true,
  );

  $form["mm_email_harvest_conf"]['email_confirmation']["mm_email_confirm_send_emails"] = array(
    '#type' => 'checkbox',
    '#title' => t('Confirm Successful Harvest to User?'),
    '#description' => t('Send an email in reply to the address if the email.'),
    '#default_value' => $configuration['mm_email_confirm_send_emails']
  );

  $form["mm_email_harvest_conf"]['email_confirmation']["mm_email_confirm_from"] = array(
    '#type' => 'textfield',
    '#title' => t('Confirm Successful From'),
    '#description' => t('The email will appear to be from this address.'),
    '#default_value' =>  $configuration['mm_email_confirm_from']
  );

  $form["mm_email_harvest_conf"]['email_confirmation']["mm_email_confirm_reply_to"] = array(
    '#type' => 'textfield',
    '#title' => t('Confirm Successful Reply-To'),
    '#description' => t('A support email address that will be used if a user replys Reply-To:'),
    '#default_value' =>  $configuration['mm_email_confirm_reply_to']
  );

  $form["mm_email_harvest_conf"]['email_confirmation']["mm_email_confirm_subject"] = array(
    '#type' => 'textfield',
    '#title' => t('Confirm Successful Subject'),
    '#description' => t('If an attachement is accepted, what should the subject line of the email '),
    '#default_value' =>  $configuration['mm_email_confirm_subject']
  );

  $form["mm_email_harvest_conf"]['email_confirmation']["mm_email_confirm_text"] = array(
    '#type' => 'textarea',
    '#title' => t('Confirm Successful Text'),
    '#description' => t('If an attachement is accepted, what should the body text of the email be?'),
    '#default_value' =>  $configuration['mm_email_confirm_text'],
    '#cols' => 60,
    '#rows' => 5,
  );

  $form["mm_email_harvest_conf"]['email_bounce'] =  array(
    '#type' => 'fieldset',
    '#title' => t("Email Bounce settings"),
    '#collapsed' => true,
    '#collapsible' => true,
  );

  $form["mm_email_harvest_conf"]['email_bounce']["mm_email_bounce_send_emails"] = array(
    '#type' => 'checkbox',
    '#title' => t('Bounce Attachements'),
    '#description' => t('If an attachement extention is not recognized, notify the user.'),
    '#default_value' => $configuration['mm_email_bounce_send_emails']
  );

  $form["mm_email_harvest_conf"]['email_bounce']["mm_email_bounce_reply_to"] = array(
    '#type' => 'textfield',
    '#title' => t('Bounce Attachements Reply-To'),
    '#description' => t('A support email address that will be used in From: and Reply-To:'),
    '#default_value' =>  $configuration['mm_email_bounce_reply_to']
  );

  $form["mm_email_harvest_conf"]['email_bounce']["mm_email_bounce_subject"] = array(
    '#type' => 'textfield',
    '#title' => t('Bounce Attachements Subject'),
    '#description' => t('If an attachement is rejected, what should the subject line of the email '),
    '#default_value' =>  $configuration['mm_email_bounce_subject']
  );

  $form["mm_email_harvest_conf"]['email_bounce']["mm_email_bounce_text"] = array(
    '#type' => 'textarea',
    '#title' => t('Bounce Attachements Text'),
    '#description' => t('If an attachement is rejected, what should the body text of the email be?'),
    '#default_value' =>  $configuration['mm_email_bounce_text'],
    '#cols' => 60,
    '#rows' => 5,
  );

  $form['mm_email_harvest_conf']['advanced'] = array(
    '#type' => 'fieldset',
    '#title' => t('Advanced'),
    '#description' => t('Advanced settings'),
  );

  $form['mm_email_harvest_conf']['advanced']['mm_email_custom_parser_php'] = array(
    '#type' => 'textarea',
    '#title' => t('Custom parsing code'),
    '#description' => t('foo'),
    '#default_value' => $configuration['mm_email_custom_parser_php'],
  );

  return $form;
}
